const { ethers } = require("hardhat")

async function main() {
  console.log("üöÄ Iniciando deploy do ChainMedDPS na rede Sepolia...")

  // Obter o deployer
  const [deployer] = await ethers.getSigners()
  console.log("üìù Deploying com a conta:", deployer.address)

  // Verificar saldo
  const balance = await deployer.getBalance()
  console.log("üí∞ Saldo da conta:", ethers.utils.formatEther(balance), "ETH")

  if (balance.lt(ethers.utils.parseEther("0.01"))) {
    console.error("‚ùå Saldo insuficiente! Voc√™ precisa de pelo menos 0.01 ETH para o deploy.")
    console.log("üîó Obtenha ETH de teste em: https://sepoliafaucet.com/")
    return
  }

  // Deploy do contrato
  console.log("üì¶ Compilando contrato...")
  const ChainMedDPS = await ethers.getContractFactory("ChainMedDPS")

  console.log("üîÑ Fazendo deploy...")
  const chainMedDPS = await ChainMedDPS.deploy()

  console.log("‚è≥ Aguardando confirma√ß√£o...")
  await chainMedDPS.deployed()

  console.log("‚úÖ ChainMedDPS deployado com sucesso!")
  console.log("üìç Endere√ßo do contrato:", chainMedDPS.address)
  console.log("üîó Verificar no Etherscan:", `https://sepolia.etherscan.io/address/${chainMedDPS.address}`)

  // Salvar informa√ß√µes do deploy
  const deployInfo = {
    network: "sepolia",
    contractAddress: chainMedDPS.address,
    deployerAddress: deployer.address,
    deploymentTime: new Date().toISOString(),
    transactionHash: chainMedDPS.deployTransaction.hash,
    blockNumber: chainMedDPS.deployTransaction.blockNumber,
    gasUsed: chainMedDPS.deployTransaction.gasLimit.toString(),
    etherscanUrl: `https://sepolia.etherscan.io/address/${chainMedDPS.address}`,
  }

  console.log("\nüìã Informa√ß√µes do Deploy:")
  console.log(JSON.stringify(deployInfo, null, 2))

  // Verificar se o contrato foi deployado corretamente
  console.log("\nüîç Verificando deploy...")
  const code = await ethers.provider.getCode(chainMedDPS.address)
  if (code === "0x") {
    console.error("‚ùå Erro: Contrato n√£o foi deployado corretamente!")
  } else {
    console.log("‚úÖ Contrato deployado e verificado com sucesso!")
  }

  // Testar algumas fun√ß√µes b√°sicas
  console.log("\nüß™ Testando fun√ß√µes b√°sicas...")

  try {
    // Obter estat√≠sticas iniciais
    const stats = await chainMedDPS.obterEstatisticas()
    console.log("üìä Estat√≠sticas iniciais:")
    console.log("  - Total DPS:", stats.totalDPS.toString())
    console.log("  - Total Usu√°rios:", stats.totalUsuarios.toString())
    console.log("  - Total Seguradoras:", stats.totalSeguradoras.toString())

    console.log("‚úÖ Todas as fun√ß√µes b√°sicas est√£o funcionando!")
  } catch (error) {
    console.error("‚ùå Erro ao testar fun√ß√µes:", error.message)
  }

  console.log("\nüéâ Deploy conclu√≠do com sucesso!")
  console.log("üí° Pr√≥ximos passos:")
  console.log("  1. Verificar o contrato no Etherscan")
  console.log("  2. Autorizar seguradoras usando a fun√ß√£o autorizarSeguradora()")
  console.log("  3. Integrar o endere√ßo do contrato na aplica√ß√£o frontend")
  console.log("  4. Configurar as vari√°veis de ambiente com o endere√ßo do contrato")
}

main()
  .then(() => process.exit(0))
  .catch((error) => {
    console.error("‚ùå Erro no deploy:", error)
    process.exit(1)
  })
